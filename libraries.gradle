// build a map of the dependency artifacts to use.  Allows centralized definition of the version of artifacts to
// use.  In that respect it serves a role similar to <dependencyManagement> in Maven
ext {

    slf4jVersion = '1.7.2'
    springframeworkVersion = '3.2.1.RELEASE'
    springsecurityVersion = '3.1.2.RELEASE'
    jacksonVersion = '1.9.12'
    jettyVersion = '8.1.9.v20130131'
    tilesVersion = '2.2.2'
    junitVersion = '4.11'

    libraries = [
            // Spring
            spring_core:                "org.springframework:spring-core:$springframeworkVersion",
            spring_expression:          "org.springframework:spring-expression:$springframeworkVersion",
            spring_beans:               "org.springframework:spring-beans:$springframeworkVersion",
            spring_context:             "org.springframework:spring-context:$springframeworkVersion",
            spring_web:                 "org.springframework:spring-web:$springframeworkVersion",
            spring_webmvc:              "org.springframework:spring-webmvc:$springframeworkVersion",
            spring_security_web:        "org.springframework.security:spring-security-web:$springsecurityVersion",
            spring_security_core:       "org.springframework.security:spring-security-core:$springsecurityVersion",
            spring_security_config:     "org.springframework.security:spring-security-config:$springsecurityVersion",
            spring_aop:                 "org.springframework:spring-aop:$springframeworkVersion",
            spring_context_support:     "org.springframework:spring-context-support:$springframeworkVersion",
            cglib:                      'cglib:cglib:2.2.2',

            // Utils
            jopt_simple: 'net.sf.jopt-simple:jopt-simple:4.4',
            commons_collections: 'commons-collections:commons-collections:3.2.1',
            commons_io: 'commons-io:commons-io:2.4',
            commons_lang: 'commons-lang:commons-lang:2.6',
            commons_beanutils: 'commons-beanutils:commons-beanutils:1.8.3',
            commons_math: 'org.apache.commons:commons-math:2.2',
            guava: 'com.google.guava:guava:13.0.1',
            joda_time: 'joda-time:joda-time:2.1',

            netty: 'io.netty:netty:3.5.7.Final',
            jackson_core_lgpl: "org.codehaus.jackson:jackson-core-lgpl:$jacksonVersion",
            jackson_mapper_lgpl: "org.codehaus.jackson:jackson-mapper-lgpl:$jacksonVersion",
            aspectjweaver: 'org.aspectj:aspectjweaver:1.7.1',

            jstl: 'jstl:jstl:1.2', //provided
            servlet: 'org.apache.geronimo.specs:geronimo-servlet_3.0_spec:1.0', //provided
            tiles_jsp: "org.apache.tiles:tiles-jsp:$tilesVersion",
            geronimo_servlet_3_0_spec: 'org.apache.geronimo.specs:geronimo-servlet_3.0_spec:1.0', //provided
            jetty_server: 'org.eclipse.jetty:jetty-server:$jettyVersion', //provided

            // Logging
            logback_classic:    'ch.qos.logback:logback-classic:1.0.9',
            slf4j_api:          "org.slf4j:slf4j-api:$slf4jVersion",
            jcl_over_slf4j:     "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            log4j_over_slf4j:   "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            jul_to_slf4j:       "org.slf4j:jul-to-slf4j:$slf4jVersion",

            // Test
            spring_test:    "org.springframework:spring-test:$springframeworkVersion", //test
            junit:          "junit:junit:$junitVersion", //test
            mockito_all:    'org.mockito:mockito-all:1.9.5', //test
            hamcrest_all:   'org.hamcrest:hamcrest-all:1.3', //test
            slf4j_nop:      "org.slf4j:slf4j-nop:$slf4jVersion" //test
    ]

    libraries_grouped = [
            logging: [libraries.logback_classic, libraries.slf4j_api, libraries.jcl_over_slf4j, libraries.log4j_over_slf4j, libraries.jul_to_slf4j],
            test_basic: [libraries.junit, libraries.slf4j_nop],
            test_full: [libraries.junit, libraries.slf4j_nop, libraries.spring_test, libraries.mockito_all, libraries.hamcrest_all]
    ]
}
